# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=m1,m2 

# 数据库连接池类名称
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动类名
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/edu_db_1?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
# 数据库用户名
spring.shardingsphere.datasource.m1.username=root
# 数据库密码
spring.shardingsphere.datasource.m1.password=123456


# 数据库连接池类名称
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动类名
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/edu_db_2?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
# 数据库用户名
spring.shardingsphere.datasource.m2.username=root
# 数据库密码
spring.shardingsphere.datasource.m2.password=123456



#指定数据库分布情况，数据库里面表分布情况
#m1,m2
spring.shardingsphere.sharding.tables.course.actualDataNodes=m$->{1..2}.course_$->{1..2}

#指定course表里面主键cid生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.course.keyGenerator.column=cid
spring.shardingsphere.sharding.tables.course.keyGenerator.type=SNOWFLAKE

#指定分片策略 约定cid值偶数添加到course_1表，如果cid是奇数调价到course_2表
spring.shardingsphere.sharding.tables.course.tableStrategy..inline.shardingColumn=cid
spring.shardingsphere.sharding.tables.course.tableStrategy..inline.algorithmExpression=course_$->{cid % 2 + 1}

#指定表分片策略，约定cid值偶数添加到course_1表,如果cid是奇数添加到course_2表
#spring.shardingsphere.sharding.default-database-strategy.inline.shardingColumn=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithmExpression=m$->{user_id % 2 + 1}

#用上边的和用下边的 分片策略都可以
spring.shardingsphere.sharding.tables.course.databaseStrategy.inline.shardingColumn=user_id
spring.shardingsphere.sharding.tables.course.databaseStrategy.inline.algorithmExpression=m$->{user_id % 2 + 1}


#打开sql输出日志
spring.shardingsphere.props.sql.show=true

#允许一个实体对应两个表
spring.main.allow-bean-definition-overriding=true

mybatis-plus.configuration.map-underscore-to-camel-case=true


